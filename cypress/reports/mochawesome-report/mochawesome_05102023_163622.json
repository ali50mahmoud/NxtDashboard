{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-10T14:35:19.861Z",
    "end": "2023-05-10T14:36:22.785Z",
    "duration": 62924,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "177dfde2-aa96-4ba3-8605-814a9755ee62",
      "title": "",
      "fullFile": "cypress\\integration\\feature\\GCC_Local.feature",
      "file": "cypress\\integration\\feature\\GCC_Local.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
          "title": "GCC Local",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Mark travel for GCC nationality using passport manual search",
              "fullTitle": "GCC Local Mark travel for GCC nationality using passport manual search",
              "timedOut": null,
              "duration": 13231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "178fdd00-9086-4552-94aa-6a1b8abe6a94",
              "parentUUID": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new GCC Card",
              "fullTitle": "GCC Local Add new GCC Card",
              "timedOut": null,
              "duration": 11319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "16371c99-8e1b-4d5e-9b73-622204e50721",
              "parentUUID": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "SEARCH GCC nationality using card number",
              "fullTitle": "GCC Local SEARCH GCC nationality using card number",
              "timedOut": null,
              "duration": 9956,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ee64415d-2082-410c-b0b8-adaeea219597",
              "parentUUID": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Susupect profile",
              "fullTitle": "GCC Local Susupect profile",
              "timedOut": null,
              "duration": 6998,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fb4d4da9-b5c9-47d9-b1df-71587d528dde",
              "parentUUID": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate business rules in investigate page for GCC local, red messages appear",
              "fullTitle": "GCC Local Validate business rules in investigate page for GCC local, red messages appear",
              "timedOut": null,
              "duration": 7070,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1fc8b8e-034b-44c9-8d2f-f3085f22a2ae",
              "parentUUID": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "scan GCC nationality using card number and mark travel",
              "fullTitle": "GCC Local scan GCC nationality using card number and mark travel",
              "timedOut": null,
              "duration": 10830,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d7896d17-75b4-48cb-bf2a-bfeeb531dee5",
              "parentUUID": "3b14ac2d-1727-4253-8e8d-759b29628e1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "178fdd00-9086-4552-94aa-6a1b8abe6a94",
            "16371c99-8e1b-4d5e-9b73-622204e50721",
            "ee64415d-2082-410c-b0b8-adaeea219597",
            "fb4d4da9-b5c9-47d9-b1df-71587d528dde",
            "e1fc8b8e-034b-44c9-8d2f-f3085f22a2ae",
            "d7896d17-75b4-48cb-bf2a-bfeeb531dee5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome-report",
        "overwrite": true,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}